/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { MatchResults } from "@stencil/router";
import { UIIconName } from "./components/ui-icon/ui-icon";
import { UIButtonKind } from "./components/ui-button/ui-button";
import { UIIconName as UIIconName1, UIIconSize } from "./components/ui-icon/ui-icon";
export namespace Components {
    interface AppHome {
    }
    interface AppProfile {
        "match": MatchResults;
    }
    interface AppRoot {
    }
    interface UiActivityBar {
    }
    interface UiActivityBarItem {
        "icon": UIIconName;
    }
    interface UiAppBar {
    }
    interface UiButton {
        "disabled": boolean;
        "icon": UIIconName | null;
        "kind": UIButtonKind;
    }
    interface UiCheckbox {
    }
    interface UiCollapsible {
    }
    interface UiIcon {
        "name": UIIconName;
        "size": UIIconSize;
    }
    interface UiSideBar {
    }
    interface UiStatusBar {
    }
    interface UiTextField {
    }
    interface UiToolbar {
    }
    interface UiTree {
    }
}
declare global {
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppProfileElement extends Components.AppProfile, HTMLStencilElement {
    }
    var HTMLAppProfileElement: {
        prototype: HTMLAppProfileElement;
        new (): HTMLAppProfileElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLUiActivityBarElement extends Components.UiActivityBar, HTMLStencilElement {
    }
    var HTMLUiActivityBarElement: {
        prototype: HTMLUiActivityBarElement;
        new (): HTMLUiActivityBarElement;
    };
    interface HTMLUiActivityBarItemElement extends Components.UiActivityBarItem, HTMLStencilElement {
    }
    var HTMLUiActivityBarItemElement: {
        prototype: HTMLUiActivityBarItemElement;
        new (): HTMLUiActivityBarItemElement;
    };
    interface HTMLUiAppBarElement extends Components.UiAppBar, HTMLStencilElement {
    }
    var HTMLUiAppBarElement: {
        prototype: HTMLUiAppBarElement;
        new (): HTMLUiAppBarElement;
    };
    interface HTMLUiButtonElement extends Components.UiButton, HTMLStencilElement {
    }
    var HTMLUiButtonElement: {
        prototype: HTMLUiButtonElement;
        new (): HTMLUiButtonElement;
    };
    interface HTMLUiCheckboxElement extends Components.UiCheckbox, HTMLStencilElement {
    }
    var HTMLUiCheckboxElement: {
        prototype: HTMLUiCheckboxElement;
        new (): HTMLUiCheckboxElement;
    };
    interface HTMLUiCollapsibleElement extends Components.UiCollapsible, HTMLStencilElement {
    }
    var HTMLUiCollapsibleElement: {
        prototype: HTMLUiCollapsibleElement;
        new (): HTMLUiCollapsibleElement;
    };
    interface HTMLUiIconElement extends Components.UiIcon, HTMLStencilElement {
    }
    var HTMLUiIconElement: {
        prototype: HTMLUiIconElement;
        new (): HTMLUiIconElement;
    };
    interface HTMLUiSideBarElement extends Components.UiSideBar, HTMLStencilElement {
    }
    var HTMLUiSideBarElement: {
        prototype: HTMLUiSideBarElement;
        new (): HTMLUiSideBarElement;
    };
    interface HTMLUiStatusBarElement extends Components.UiStatusBar, HTMLStencilElement {
    }
    var HTMLUiStatusBarElement: {
        prototype: HTMLUiStatusBarElement;
        new (): HTMLUiStatusBarElement;
    };
    interface HTMLUiTextFieldElement extends Components.UiTextField, HTMLStencilElement {
    }
    var HTMLUiTextFieldElement: {
        prototype: HTMLUiTextFieldElement;
        new (): HTMLUiTextFieldElement;
    };
    interface HTMLUiToolbarElement extends Components.UiToolbar, HTMLStencilElement {
    }
    var HTMLUiToolbarElement: {
        prototype: HTMLUiToolbarElement;
        new (): HTMLUiToolbarElement;
    };
    interface HTMLUiTreeElement extends Components.UiTree, HTMLStencilElement {
    }
    var HTMLUiTreeElement: {
        prototype: HTMLUiTreeElement;
        new (): HTMLUiTreeElement;
    };
    interface HTMLElementTagNameMap {
        "app-home": HTMLAppHomeElement;
        "app-profile": HTMLAppProfileElement;
        "app-root": HTMLAppRootElement;
        "ui-activity-bar": HTMLUiActivityBarElement;
        "ui-activity-bar-item": HTMLUiActivityBarItemElement;
        "ui-app-bar": HTMLUiAppBarElement;
        "ui-button": HTMLUiButtonElement;
        "ui-checkbox": HTMLUiCheckboxElement;
        "ui-collapsible": HTMLUiCollapsibleElement;
        "ui-icon": HTMLUiIconElement;
        "ui-side-bar": HTMLUiSideBarElement;
        "ui-status-bar": HTMLUiStatusBarElement;
        "ui-text-field": HTMLUiTextFieldElement;
        "ui-toolbar": HTMLUiToolbarElement;
        "ui-tree": HTMLUiTreeElement;
    }
}
declare namespace LocalJSX {
    interface AppHome {
    }
    interface AppProfile {
        "match"?: MatchResults;
    }
    interface AppRoot {
    }
    interface UiActivityBar {
        "onAction"?: (event: CustomEvent<{ id: string }>) => void;
    }
    interface UiActivityBarItem {
        "icon"?: UIIconName;
        "onActivity-bar-action"?: (event: CustomEvent<{ id: string }>) => void;
    }
    interface UiAppBar {
    }
    interface UiButton {
        "disabled"?: boolean;
        "icon"?: UIIconName | null;
        "kind"?: UIButtonKind;
        "onAction"?: (event: CustomEvent<any>) => void;
    }
    interface UiCheckbox {
    }
    interface UiCollapsible {
    }
    interface UiIcon {
        "name"?: UIIconName;
        "size"?: UIIconSize;
    }
    interface UiSideBar {
    }
    interface UiStatusBar {
    }
    interface UiTextField {
    }
    interface UiToolbar {
    }
    interface UiTree {
    }
    interface IntrinsicElements {
        "app-home": AppHome;
        "app-profile": AppProfile;
        "app-root": AppRoot;
        "ui-activity-bar": UiActivityBar;
        "ui-activity-bar-item": UiActivityBarItem;
        "ui-app-bar": UiAppBar;
        "ui-button": UiButton;
        "ui-checkbox": UiCheckbox;
        "ui-collapsible": UiCollapsible;
        "ui-icon": UiIcon;
        "ui-side-bar": UiSideBar;
        "ui-status-bar": UiStatusBar;
        "ui-text-field": UiTextField;
        "ui-toolbar": UiToolbar;
        "ui-tree": UiTree;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-profile": LocalJSX.AppProfile & JSXBase.HTMLAttributes<HTMLAppProfileElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
            "ui-activity-bar": LocalJSX.UiActivityBar & JSXBase.HTMLAttributes<HTMLUiActivityBarElement>;
            "ui-activity-bar-item": LocalJSX.UiActivityBarItem & JSXBase.HTMLAttributes<HTMLUiActivityBarItemElement>;
            "ui-app-bar": LocalJSX.UiAppBar & JSXBase.HTMLAttributes<HTMLUiAppBarElement>;
            "ui-button": LocalJSX.UiButton & JSXBase.HTMLAttributes<HTMLUiButtonElement>;
            "ui-checkbox": LocalJSX.UiCheckbox & JSXBase.HTMLAttributes<HTMLUiCheckboxElement>;
            "ui-collapsible": LocalJSX.UiCollapsible & JSXBase.HTMLAttributes<HTMLUiCollapsibleElement>;
            "ui-icon": LocalJSX.UiIcon & JSXBase.HTMLAttributes<HTMLUiIconElement>;
            "ui-side-bar": LocalJSX.UiSideBar & JSXBase.HTMLAttributes<HTMLUiSideBarElement>;
            "ui-status-bar": LocalJSX.UiStatusBar & JSXBase.HTMLAttributes<HTMLUiStatusBarElement>;
            "ui-text-field": LocalJSX.UiTextField & JSXBase.HTMLAttributes<HTMLUiTextFieldElement>;
            "ui-toolbar": LocalJSX.UiToolbar & JSXBase.HTMLAttributes<HTMLUiToolbarElement>;
            "ui-tree": LocalJSX.UiTree & JSXBase.HTMLAttributes<HTMLUiTreeElement>;
        }
    }
}

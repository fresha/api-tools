openapi: 3.0.3
info:
  title: openapi-codegen-test-api
  version: 0.1.0
  description: >
    A simple API used as a reference for code generators.
    It defines as service for managing blocked times (= busy slots)
    in someone's calendar.
  contact:
    name: Andriy Mykulyak
    url: https://github.com/mykulyak
  x-root-url: API_SERVER_URL
paths:
  # /test-parameterless-get:
  #   get:
  #     description: A GET operation without parameters
  #     operationId: testParameterlessGet
  #     responses:
  #       200:
  #         description: A list of BlockedTime resources.
  #         content:
  #           application/vnd.api+json:
  #             schema:
  #               $ref: "#/components/schemas/BlockedTimeListDocument"
  /blocked-times:
    get:
      description: Returns list of blocked time resources, based on search criteria
      operationId: readBlockedTimeList
      parameters:
        - name: dateFrom
          description: start date (inclusive)
          in: query
          schema:
            type: string
            format: date
          required: true
        - name: dateTo
          description: end date (inclusive). If omitted, today's date is assumed
          in: query
          schema:
            type: string
            format: date
        - name: locationId
          description: ID of the location to look for
          in: query
          schema:
            type: string
          required: true
        - name: employeeIds
          description: A comma-separated list of employee IDs. If given, blocked times will be scoped to those, assigned to employees those IDs are given. Otherwise, returns blocked times for all employees.
          in: query
          schema:
            type: array
            items:
              type: number
            minItems: 1
      responses:
        200:
          description: |
            Returns a list of BlockedTime resources.
            Because the response is defined inline, and not in the components
            section, name of the generated response type (in code) will be derived
            from operation ID. In this case, it should be ReadBlockedTimeListResponse.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/BlockedTimeListDocument"
        400:
          $ref: "#/components/responses/JSONAPIErrorResponse400"
      x-entry-key: blockedTime # this extension is used only in frontend code generators
    post:
      operationId: createBlockedTime
      requestBody:
        description: |
          Parameters to create BlockedTime.
          Because this request body is defined line, its type will be derived from
          operation ID. In this case, it should be CreateBlockedTimeRequestBody.
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                jsonapi:
                  $ref: "#/components/schemas/JSONAPIVersion"
                data:
                  $ref: "#/components/schemas/BlockedTimeCreateRequestResource"
      responses:
        202:
          description: Returned when new blocked has been successfully created
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/BlockedTimeDocument"
      x-entry-key: blockedTime
  "/blocked-times/{id}":
    put:
      operationId: updateBlockedTime
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: |
          Parameters to update a blocked time.
          This request body is defined inline, and therefore its name will be
          derived from operation ID. In this case, it should be UpdateBlockedTimeRequestBody.
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                jsonapi:
                  $ref: "#/components/schemas/JSONAPIVersion"
                data:
                  $ref: "#/components/schemas/BlockedTimeUpdateRequestResource"
      responses:
        200:
          $ref: "#/components/responses/BlockedTimeResponse"
        404:
          description: Returned when given blocked times couldn't be found
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/JSONAPIErrorDocument"
      x-entry-key: blockedTime
    delete:
      description: Deletes blocked time with given ID
      operationId: deleteBlockedTime
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted
          content:
            application/vnd.api+json:
              schema:
                type: string
        404:
          description: Cannot find
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/JSONAPIErrorDocument"
      x-entry-key: blockedTime
  /blocked-times/export:
    post:
      description: Requests for an export of blocked times
      operationId: createBlockedTimesExport
      requestBody:
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                jsonapi:
                  $ref: "#/components/schemas/JSONAPIVersion"
                data:
                  $ref: "#/components/schemas/ExportJobCreateResource"
      responses:
        202:
          $ref: "#/components/responses/ExportJobResponse"
        400:
          description: Wrong job parameters
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/JSONAPIErrorDocument"
  "/blocked-times/export/{id}":
    get:
      description: Returns status of given export job
      operationId: readBlockedTimesExportStatus
      parameters:
        - name: id
          in: path
          description: Export job ID
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        200:
          $ref: "#/components/responses/ExportJobResponse"
        404:
          description: Returns when job with given ID doesn't exist
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/JSONAPIErrorDocument"
      x-entry-key: blockedTimeExport
servers:
  - url: http://localhost:{port}
    description: local server
    variables:
      port:
        default: "5600"
  - url: https://blocked-times.example.com
    description: production server
components:
  schemas:
    EmployeeRelationship:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
          properties:
            type:
              type: string
              enum:
                - employees
            id:
              type: string
              minLength: 1
    LocationRelationship:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
          properties:
            type:
              type: string
              enum:
                - locations
            id:
              type: string
              minLength: 1
    BlockedTimeResource:
      type: object
      required:
        - type
        - id
        - attributes
        - relationships
      properties:
        type:
          type: string
          enum:
            - blocked-times
        id:
          type: string
          minLength: 1
        attributes:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
            note:
              type: string
              nullable: true
            is-private:
              type: boolean
        relationships:
          type: object
          properties:
            employee:
              $ref: "#/components/schemas/EmployeeRelationship"
            location:
              $ref: "#/components/schemas/LocationRelationship"
    BlockedTimeDocument:
      type: object
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/JSONAPIVersion"
        data:
          $ref: "#/components/schemas/BlockedTimeResource"
    BlockedTimeListDocument:
      type: object
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/JSONAPIVersion"
        data:
          type: array
          items:
            $ref: "#/components/schemas/BlockedTimeResource"
    BlockedTimeCreateRequestResource:
      description: Passed when one needs to create a new blocked time
      type: object
      required:
        - type
        - attributes
        - relationships
      properties:
        type:
          type: string
          enum:
            - blocked-time-create-requests
        attributes:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
            note:
              type: string
              maxLength: 255
            is-private:
              type: boolean
        relationships:
          type: object
          required:
            - employee
            - location
          properties:
            employee:
              $ref: "#/components/schemas/EmployeeRelationship"
            location:
              $ref: "#/components/schemas/LocationRelationship"
    BlockedTimeUpdateRequestResource:
      type: object
      required:
        - type
        - attributes
        - relationships
      properties:
        type:
          type: string
          enum:
            - blocked-time-update-requests
        attributes:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
            note:
              type: string
              maxLength: 255
            is-private:
              type: boolean
        relationships:
          type: object
          properties:
            employee:
              $ref: "#/components/schemas/EmployeeRelationship"
    ExportJobCreateResource:
      description: Passed when one needs to create a new blocked time export
      type: object
      required:
        - type
        - attributes
        - relationships
      properties:
        type:
          type: string
          enum:
            - export-job-create-requests
        attributes:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
        relationships:
          type: object
    ExportJobResource:
      type: object
      required:
        - type
        - id
        - attributes
      properties:
        type:
          type: string
          enum:
            - export-jobs
        id:
          type: string
          minLength: 1
        attributes:
          type: object
          required:
            - status
            - donwload-link
          properties:
            status:
              type: string
              enum:
                - waiting
                - complete
                - failed
            download-link:
              type: string
              nullable: true
        relationships:
          type: object
    JSONAPIVersion:
      type: object
      required:
        - version
      properties:
        version:
          type: string
          enum:
            - "1.0"
          default: "1.0"
    JSONAPIError:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
        source:
          type: object
          properties:
            pointer:
              type: string
            parameter:
              type: string
    JSONAPIErrorDocument:
      type: object
      required:
        - errors
      properties:
        jsonapi:
          $ref: "#/components/schemas/JSONAPIVersion"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/JSONAPIError"
  responses:
    BlockedTimeResponse:
      description: JSON:API document that returns a single BlockedTime resource in its primary data
      content:
        application/vnd.api+json:
          schema:
            type: object
            required:
              - data
            properties:
              jsonapi:
                $ref: "#/components/schemas/JSONAPIVersion"
              data:
                $ref: "#/components/schemas/BlockedTimeResource"
    ExportJobResponse:
      description: Export request has been added to the queue
      content:
        application/vnd.api+json:
          schema:
            type: object
            required:
              - jsonapi
              - data
            properties:
              jsonapi:
                $ref: "#/components/schemas/JSONAPIVersion"
              data:
                $ref: "#/components/schemas/ExportJobResource"
    JSONAPIErrorResponse:
      description: Generic JSON:API error response
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/JSONAPIErrorDocument"
    JSONAPIErrorResponse400:
      description: Returned when there's an error in parameter's values or request body
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/JSONAPIErrorDocument"
  securitySchemes:
    cookieAuthStaging:
      type: apiKey
      name: _partners_session_staging
      in: cookie
      description: Use this if you connect to staging environment
    cookieAuthProduction:
      type: apiKey
      name: _partners_session
      in: cookie
      description: Use this if you connect to production
security:
  - cookieAuthStaging: []
    cookieAuthProduction: []

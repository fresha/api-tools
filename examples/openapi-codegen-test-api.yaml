openapi: 3.0.3
info:
  title: openapi-codegen-test-api
  version: 0.1.0
  description: A simple API used as a reference for code generators.
  contact:
    name: Andriy Mykulyak
    url: https://github.com/mykulyak
  x-root-url: API_SERVER_URL
paths:
  /blocked-times:
    get:
      operationId: readBlockedTimeList
      parameters:
        - name: dateFrom
          description: start date (inclusive)
          in: query
          schema:
            type: string
            format: date
          required: true
        - name: dateTo
          description: end date (inclusive). If omitted, today's date is assumed
          in: query
          schema:
            type: string
            format: date
        - name: locationId
          description: ID of the location to look for
          in: query
          schema:
            type: string
          required: true
        - name: employeeIds
          description: A comma-separated list of employee IDs. If given, blocked times will be scoped to those, assigned to employees those IDs are given. Otherwise, returns blocked times for all employees.
          in: query
          schema:
            type: array
            items:
              type: number
            minItems: 1
      responses:
        200:
          description: |
            Returns a list of BlockedTime resources.
            Because the response is defined inline, corresponding type name will be derived
            from operation name. In this case, it should be ReadBlockedTimeListResponse.
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/BlockedTimeListDocument"
        400:
          $ref: "#/components/responses/JSONAPIErrorResponse400"
      x-entry-key: blockedTime
    post:
      operationId: createBlockedTime
      requestBody:
        description: |
          Parameters to create BlockedTime.
          Because this request body is defined line, its type will be derived from
          operation ID. In this case, it should be CreateBlockedTimeRequestBody.
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                jsonapi:
                  $ref: "#/components/schemas/JSONAPIVersion"
                data:
                  $ref: "#/components/schemas/BlockedTimeCreateRequestDocument"
      responses:
        202:
          description: Returned when new blocked has been successfully created
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/BlockedTimeDocument"
      x-entry-key: blockedTime
  "/blocked-times/{id}":
    put:
      operationId: updateBlockedTime
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            minLength: 1
      requestBody:
        description: |
          Parameters to update a blocked time.
          This request body is defined inline, and therefore its name will be derived from
          operation name. In this case, it should be UpdateBlockedTimeRequestBody.
        required: true
        content:
          application/vnd.api+json:
            schema:
              type: object
              required:
                - data
              properties:
                jsonapi:
                  $ref: "#/components/schemas/JSONAPIVersion"
                data:
                  $ref: "#/components/schemas/BlockedTimeUpdateRequestDocument"
      responses:
        200:
          $ref: "#/components/responses/BlockedTimeResponse"
        404:
          description: Cannot find blocked time
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/JSONAPIErrorDocument"
      x-entry-key: blockedTime
    delete:
      operationId: deleteBlockedTime
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted
          content:
            application/vnd.api+json:
              schema:
                type: string
        404:
          description: Cannot find
          content:
            application/vnd.api+json:
              schema:
                $ref: "#/components/schemas/JSONAPIErrorDocument"
      x-entry-key: blockedTime
servers:
  - url: http://localhost:{port}
    description: local server
    variables:
      port:
        default: "5600"
  - url: https://blocked-times.example.com
    description: production server
components:
  schemas:
    EmployeeRelationship:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
          properties:
            type:
              type: string
              enum:
                - employees
            id:
              type: string
              minLength: 1
    LocationRelationship:
      type: object
      required:
        - data
      properties:
        data:
          type: object
          required:
            - type
            - id
          properties:
            type:
              type: string
              enum:
                - locations
            id:
              type: string
              minLength: 1
    BlockedTime:
      type: object
      required:
        - type
        - id
        - attributes
        - relationships
      properties:
        type:
          type: string
          enum:
            - blocked-times
        id:
          type: string
          minLength: 1
        attributes:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
            note:
              type: string
              nullable: true
            is-private:
              type: boolean
        relationships:
          type: object
          properties:
            employee:
              $ref: "#/components/schemas/EmployeeRelationship"
            location:
              $ref: "#/components/schemas/LocationRelationship"
    BlockedTimeDocument:
      type: object
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/JSONAPIVersion"
        data:
          $ref: "#/components/schemas/BlockedTime"
    BlockedTimeListDocument:
      type: object
      required:
        - data
      properties:
        jsonapi:
          $ref: "#/components/schemas/JSONAPIVersion"
        data:
          type: array
          items:
            $ref: "#/components/schemas/BlockedTime"
    BlockedTimeCreateRequestDocument:
      description: Passed when one needs to create a new blocked time
      type: object
      required:
        - type
        - attributes
        - relationships
      properties:
        type:
          type: string
          enum:
            - blocked-time-create-requests
        attributes:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
            note:
              type: string
              maxLength: 255
            is-private:
              type: boolean
        relationships:
          type: object
          required:
            - employee
            - location
          properties:
            employee:
              $ref: "#/components/schemas/EmployeeRelationship"
            location:
              $ref: "#/components/schemas/LocationRelationship"
    BlockedTimeUpdateRequestDocument:
      type: object
      required:
        - type
        - attributes
        - relationships
      properties:
        type:
          type: string
          enum:
            - blocked-time-update-requests
        attributes:
          type: object
          required:
            - start
            - end
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
            note:
              type: string
              maxLength: 255
            is-private:
              type: boolean
        relationships:
          type: object
          properties:
            employee:
              $ref: "#/components/schemas/EmployeeRelationship"
    JSONAPIVersion:
      type: object
      required:
        - version
      properties:
        version:
          type: string
          enum:
            - "1.0"
          default: "1.0"
    JSONAPIError:
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        code:
          type: string
        title:
          type: string
        detail:
          type: string
        source:
          type: object
          properties:
            pointer:
              type: string
            parameter:
              type: string
    JSONAPIErrorDocument:
      type: object
      required:
        - errors
      properties:
        jsonapi:
          $ref: "#/components/schemas/JSONAPIVersion"
        errors:
          type: array
          items:
            $ref: "#/components/schemas/JSONAPIError"
  responses:
    BlockedTimeResponse:
      description: JSON:API document that returns a single BlockedTime resource in its primary data
      content:
        application/vnd.api+json:
          schema:
            type: object
            required:
              - data
            properties:
              jsonapi:
                $ref: "#/components/schemas/JSONAPIVersion"
              data:
                $ref: "#/components/schemas/BlockedTime"
    JSONAPIErrorResponse:
      description: Generic JSON:API error response
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/JSONAPIErrorDocument"
    JSONAPIErrorResponse400:
      description: Returned when there's an error in parameter's values or request body
      content:
        application/vnd.api+json:
          schema:
            $ref: "#/components/schemas/JSONAPIErrorDocument"
  securitySchemes:
    cookieAuthStaging:
      type: apiKey
      name: _partners_session_staging
      in: cookie
      description: Use this if you connect to staging environment
    cookieAuthProduction:
      type: apiKey
      name: _partners_session
      in: cookie
      description: Use this if you connect to production
security:
  - cookieAuthStaging: []
    cookieAuthProduction: []
